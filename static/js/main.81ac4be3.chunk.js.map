{"version":3,"sources":["components/TodoComponents/TodoItem.js","components/TodoComponents/TodoList.js","components/TodoComponents/TodoForm.js","index.js"],"names":["TodoItem","props","console","log","react_default","a","createElement","className","concat","itemObj","completed","onClick","toggleItemObj","id","task","TodoList","taskslistarray","map","TodoComponents_TodoItem","key","TodoForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChanges","e","setState","taskItem","target","value","submitItem","preventDefault","addItem","state","window","localStorage","setItem","JSON","stringify","lists","onSubmit","type","placeholder","onChange","React","Component","App","objectSpread","item","copiedTasks","slice","newItem","Date","now","push","clearCompleted","completedTasks","filter","list","getItem","parsedList","parse","TodoComponents_TodoForm","TodoComponents_TodoList","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.81ac4be3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// eslint-disable-next-line\r\n{/* onClick={props.toggle.....passes the props back up, on load..\r\n\t-essentially your calling the function right here...\r\n\t-wrap it in another function instance like shown to wait & happen onClick. */}\r\n\t\r\nconst TodoItem = props => {\r\n\tconsole.log(props);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`itemObj${props.itemObj.completed ? \" completed\" : \"\"}`}\r\n\t\t\tonClick={() => props.toggleItemObj(props.itemObj.id)}\r\n\t\t>\r\n\t\t\t<p>{props.itemObj.task}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = props => {\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t{props.taskslistarray.map(itemObj => (\r\n\t\t\t<TodoItem\r\n\t\t\t\tkey={itemObj.id}\r\n\t\t\t\titemObj={itemObj}\r\n\t\t\t\ttoggleItemObj={props.toggleItemObj}\r\n\t\t\t/>\r\n\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nclass TodoForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttaskItem: \"\"\r\n\t\t};\r\n\t} \r\n\thandleChanges = e => {\r\n\t\tthis.setState({ taskItem: e.target.value });\r\n\t};\r\n\r\n\tsubmitItem = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.addItem(this.state.taskItem);\r\n\t\tthis.setState({ taskItem: \"\" \r\n\t}, () => {\r\n        window.localStorage.setItem('savedList', JSON.stringify(this.state.lists));\r\n\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.submitItem}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='add task =)'\r\n\t\t\t\t\tvalue={this.state.taskItem}\r\n\t\t\t\t\tonChange={this.handleChanges}\r\n\t\t\t\t/>\r\n\t\t\t\t<button>Add</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport TodoList from \"./components/TodoComponents/TodoList\";\r\nimport TodoForm from \"./components/TodoComponents/TodoForm\";\r\n\r\nconst taskslistarray = [\r\n    {\r\n        task: \"Organize Garage\",\r\n        id: 1528817077286,\r\n        completed: false\r\n    },\r\n    {\r\n        task: \"Bake Cookies\",\r\n        id: 1528817084358,\r\n        completed: false\r\n    }\r\n];\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            taskslistarray\r\n        };\r\n    }\r\n    toggleItemObj = id => {\r\n        this.setState({\r\n            taskslistarray: this.state.taskslistarray.map(itemObj => {\r\n                if (itemObj.id === id) {\r\n                    return {\r\n                        ...itemObj,\r\n                        completed: !itemObj.completed\r\n                    };\r\n                }\r\n                return itemObj;\r\n            })\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        const list = window.localStorage.getItem('savedList');\r\n        const parsedList = JSON.parse(list);\r\n        this.setState({\r\n            taskslistarray:parsedList,\r\n        })\r\n    };\r\n  \r\n    addItem = item => {  \r\n        const copiedTasks = this.state.taskslistarray.slice();\r\n\r\n        const newItem = {\r\n            task: item,\r\n            id: Date.now(),\r\n            completed: false\r\n        };\r\n        copiedTasks.push(newItem);\r\n        console.log(copiedTasks);\r\n        this.setState({ taskslistarray: copiedTasks }, () => { window.localStorage.setItem('savedList',JSON.stringify(this.state.taskslistarray));});\r\n    };\r\n    clearCompleted = () => {\r\n        const copiedTasks = this.state.taskslistarray.slice();\r\n        const completedTasks = copiedTasks.filter(item => !item.completed === true);\r\n        this.setState({ taskslistarray: completedTasks }, () => {\r\n            window.localStorage.setItem('savedList', JSON.stringify(this.state.taskslistarray));\r\n        });\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <div className='App'>\r\n                <div className='header'>\r\n                    <h1> ToDoList</h1>\r\n                    <TodoForm addItem={this.addItem} />\r\n                </div>\r\n                <TodoList\r\n                    taskslistarray={this.state.taskslistarray}\r\n                    toggleItemObj={this.toggleItemObj}\r\n                />\r\n                <button onClick={this.clearCompleted}>ClearCompleted</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}